"""initial

Revision ID: 350ff4cf6b81
Revises: 
Create Date: 2025-06-14 12:39:39.421890

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '350ff4cf6b81'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_log',
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('context', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_audit_log'))
    )
    op.create_table('configuration_version',
    sa.Column('version', sa.String(length=50), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_configuration_version')),
    sa.UniqueConstraint('version', name=op.f('uq_configuration_version_version'))
    )
    op.create_table('market_data_cache',
    sa.Column('token_pair', sa.String(length=50), nullable=False),
    sa.Column('data', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_market_data_cache'))
    )
    op.create_index(op.f('ix_market_data_cache_token_pair'), 'market_data_cache', ['token_pair'], unique=False)
    op.create_table('portfolio_snapshot',
    sa.Column('data', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_portfolio_snapshot'))
    )
    op.create_table('risk_event',
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_risk_event'))
    )
    op.create_table('strategy_performance',
    sa.Column('strategy', sa.String(length=50), nullable=False),
    sa.Column('metric', sa.String(length=50), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_strategy_performance'))
    )
    op.create_index(op.f('ix_strategy_performance_strategy'), 'strategy_performance', ['strategy'], unique=False)
    op.create_table('trade_execution',
    sa.Column('strategy', sa.String(length=50), nullable=False),
    sa.Column('token_pair', sa.String(length=50), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('tx_hash', sa.String(length=66), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_trade_execution')),
    sa.UniqueConstraint('tx_hash', name=op.f('uq_trade_execution_tx_hash'))
    )
    op.create_index(op.f('ix_trade_execution_strategy'), 'trade_execution', ['strategy'], unique=False)
    op.create_table('user_session',
    sa.Column('session_id', sa.String(length=64), nullable=False),
    sa.Column('ended_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_session')),
    sa.UniqueConstraint('session_id', name=op.f('uq_user_session_session_id'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_session')
    op.drop_index(op.f('ix_trade_execution_strategy'), table_name='trade_execution')
    op.drop_table('trade_execution')
    op.drop_index(op.f('ix_strategy_performance_strategy'), table_name='strategy_performance')
    op.drop_table('strategy_performance')
    op.drop_table('risk_event')
    op.drop_table('portfolio_snapshot')
    op.drop_index(op.f('ix_market_data_cache_token_pair'), table_name='market_data_cache')
    op.drop_table('market_data_cache')
    op.drop_table('configuration_version')
    op.drop_table('audit_log')
    # ### end Alembic commands ###
